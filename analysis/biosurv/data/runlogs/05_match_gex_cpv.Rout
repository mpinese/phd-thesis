R> 
R> load("../data/04_gexnormed_cpv.rda")
R> 
R> pdf("../results/05_match_gex_cpv.pdf", height = 10, width = 10)
R> 
R> library(lumi)
R> 
R> # The main issue is to combine the duplicate arrays into single ones.
R> # Either can actually average them, or just choose one arbitrarily.
R> 
R> # First see how they stack up as replicates
R> 
R> temp.sd = apply(gex, 1, sd)
R> temp.selsd = temp.sd > quantile(temp.sd[sel.probe.unsup], 0.95) & sel.probe.unsup
R> temp.selgex = gex[temp.selsd,]
R> temp.selgex = (temp.selgex - rowMeans(temp.selgex)) / apply(temp.selgex, 1, sd)
R> temp.dists = dist(t(temp.selgex))
R> temp.mds = cmdscale(temp.dists)
R> temp.col = rep("grey", ncol(temp.selgex))
R> temp.reps = table(sample_data$patient_id)
R> temp.reps = temp.reps[temp.reps > 1]
R> temp.reps = sample_data[sample_data$patient_id %in% names(temp.reps),]
R> library(RColorBrewer)
R> temp.pal = brewer.pal(4, "Paired")
R> names(temp.pal) = unique(temp.reps$patient_id)
R> for (temp in 1:length(temp.pal)) { temp.col[sample_data$patient_id == names(temp.pal)[temp]] = temp.pal[temp] }
R> plot(temp.mds, col = temp.col, pch = 16, main = "Replicate consistency: MDS of top 5% by SD")
R> legend("bottomright", legend = names(temp.pal), fill = temp.pal, inset = 0.05)
R> 
R> # Replicates are very close.  May as well merge them.
R> temp.gex.merged = c()
R> temp.samples.merged = c()
R> sample_data2 = sample_data
R> sample_data2$purity_qpure = as.numeric(sample_data2$purity_qpure)
R> sample_data2$exp_array_id = as.character(sample_data2$exp_array_id)
R> sample_data2$exp_slide_id = as.character(sample_data2$exp_slide_id)
R> gex2 = gex
R> for (temp.patid in unique(sample_data$patient_id)) {
+ 	if (temp.patid %in% temp.reps$patient_id)
+ 	{
+ 		cat(temp.patid, "\n")
+ 		gex2 = cbind(gex2, apply(gex[,rownames(temp.reps)[temp.reps$patient_id == temp.patid]], 1, median))
+ 		sample_data2 = rbind(sample_data2, c(temp.patid, "7:Primary tumour", temp.reps$purity_qpure[temp.reps$patient_id == temp.patid][1],
+ 			paste(temp.reps$exp_array_id[temp.reps$patient_id == temp.patid], collapse = "-"),
+ 			paste(unique(temp.reps$exp_slide_id[temp.reps$patient_id == temp.patid]), collapse = "-"),
+ 			paste(temp.reps$path[temp.reps$patient_id == temp.patid], collapse = "-"),
+ 			temp.reps$scanner_group[temp.reps$patient_id == temp.patid][1]))
+ 		colnames(gex2)[ncol(gex2)] = paste(rownames(temp.reps)[temp.reps$patient_id == temp.patid], collapse = "-")
+ 		rownames(sample_data2)[nrow(sample_data2)] = paste(rownames(temp.reps)[temp.reps$patient_id == temp.patid], collapse = "-")
+ 	}
+ }
APGI_1959 
APGI_2222 
APGI_2340 
APGI_2315 
R> 
R> temp = !(colnames(gex2) %in% rownames(temp.reps))
R> gex2 = gex2[,temp]
R> sample_data2 = sample_data2[temp,]
R> sample_data2 = as.data.frame(sample_data2)
R> sample_data2$scanner_group = as.logical(sample_data2$scanner_group)
R> sample_data2$purity_qpure = as.numeric(sample_data2$purity_qpure)
R> 
R> sample_data2 = sample_data2[colnames(gex2),]
R> 
R> table(table(cpvs$Patient.ID))

  1   2 
235   2 
R> # Two patients have two entries in CPV.  Exclude them.
R> temp = table(cpvs$Patient.ID)
R> temp = names(temp)[temp == 1]
R> cpvs = cpvs[cpvs$Patient.ID %in% temp,]
R> 
R> temp = intersect(cpvs$Patient.ID, sample_data2$patient_id)
R> rownames(cpvs) = cpvs$Patient.ID
R> cpvs = cpvs[temp,]
R> gex2 = gex2[,match(temp, sample_data2$patient_id)]
R> sample_data2 = sample_data2[match(temp, sample_data2$patient_id),]
R> 
R> # Sanity checks
R> stopifnot(cpvs$Patient.ID == sample_data2$patient_id)
R> 
R> temp = ls()
R> rm(list = temp[grepl("^temp", temp)])
R> gex = gex2
R> samples = sample_data2
R> rm(sample_data, sample_data2, gex2)
R> 
R> # Sanity checks
R> stopifnot(cpvs$Patient.ID == samples$patient_id)
R> stopifnot(colnames(gex) == rownames(samples))
R> 
R> save.image("../data/05_gexnormed_cpv_matched.rda")
R> 
R> dev.off()
null device 
          1 
R> 
R> sessionInfo()
R version 3.1.1 (2014-07-10)
Platform: x86_64-unknown-linux-gnu (64-bit)

locale:
 [1] LC_CTYPE=en_US.iso885915       LC_NUMERIC=C                   LC_TIME=en_US.iso885915       
 [4] LC_COLLATE=en_US.iso885915     LC_MONETARY=en_US.iso885915    LC_MESSAGES=en_US.iso885915   
 [7] LC_PAPER=en_US.iso885915       LC_NAME=C                      LC_ADDRESS=C                  
[10] LC_TELEPHONE=C                 LC_MEASUREMENT=en_US.iso885915 LC_IDENTIFICATION=C           

attached base packages:
[1] parallel  methods   stats     graphics  grDevices utils     datasets  base     

other attached packages:
[1] RColorBrewer_1.0-5  lumi_2.18.0         Biobase_2.26.0      BiocGenerics_0.12.0

loaded via a namespace (and not attached):
 [1] affy_1.44.0             affyio_1.34.0           annotate_1.44.0         AnnotationDbi_1.28.1   
 [5] base64_1.1              base64enc_0.1-2         BatchJobs_1.5           BBmisc_1.8             
 [9] beanplot_1.2            BiocInstaller_1.16.1    BiocParallel_1.0.0      biomaRt_2.22.0         
[13] Biostrings_2.34.0       bitops_1.0-6            brew_1.0-6              bumphunter_1.6.0       
[17] checkmate_1.5.0         codetools_0.2-9         colorspace_1.2-4        DBI_0.3.1              
[21] digest_0.6.4            doRNG_1.6               fail_1.2                foreach_1.4.2          
[25] genefilter_1.48.1       GenomeInfoDb_1.2.2      GenomicAlignments_1.2.1 GenomicFeatures_1.18.2 
[29] GenomicRanges_1.18.1    grid_3.1.1              illuminaio_0.8.0        IRanges_2.0.0          
[33] iterators_1.0.7         KernSmooth_2.23-13      lattice_0.20-29         limma_3.22.1           
[37] locfit_1.5-9.1          MASS_7.3-35             Matrix_1.1-4            matrixStats_0.10.3     
[41] mclust_4.4              methylumi_2.12.0        mgcv_1.8-3              minfi_1.12.0           
[45] multtest_2.22.0         nleqslv_2.5             nlme_3.1-118            nor1mix_1.2-0          
[49] pkgmaker_0.22           plyr_1.8.1              preprocessCore_1.28.0   quadprog_1.5-5         
[53] R.methodsS3_1.6.1       Rcpp_0.11.3             RCurl_1.95-4.3          registry_0.2           
[57] reshape_0.8.5           rngtools_1.2.4          Rsamtools_1.18.2        RSQLite_1.0.0          
[61] rtracklayer_1.26.2      S4Vectors_0.4.0         sendmailR_1.2-1         siggenes_1.40.0        
[65] splines_3.1.1           stats4_3.1.1            stringr_0.6.2           survival_2.37-7        
[69] tools_3.1.1             XML_3.98-1.1            xtable_1.7-4            XVector_0.6.0          
[73] zlibbioc_1.12.0        
R> 
