R> 
R> 
R> ######################################################################
R> # GSE21501
R> ######################################################################
R> 
R> GSE21501.samp = t(read.table(pipe("xz -dc ../data/validation/GSE21501_series_matrix.txt.xz | grep -E '^!Sample'"), sep = "\t"))
R> colnames(GSE21501.samp) = gsub("^!", "", GSE21501.samp[1,])
R> GSE21501.samp = data.frame(GSE21501.samp[-1,], check.names = TRUE)
R> GSE21501.samp = GSE21501.samp[,c("Sample_title", "Sample_geo_accession", "Sample_characteristics_ch2", "Sample_characteristics_ch2.1", "Sample_characteristics_ch2.2", "Sample_characteristics_ch2.3")]
R> GSE21501.samp = GSE21501.samp[grepl("^os", GSE21501.samp$Sample_characteristics_ch2),]
R> colnames(GSE21501.samp) = c("Sample_title" = "id", "Sample_geo_accession" = "acc", "Sample_characteristics_ch2" = "time", "Sample_characteristics_ch2.1" = "event", "Sample_characteristics_ch2.2" = "tstage", "Sample_characteristics_ch2.3" = "nstage")[colnames(GSE21501.samp)]
R> GSE21501.samp$time = as.numeric(gsub("os time: ", "", GSE21501.samp$time))
R> GSE21501.samp$event = as.numeric(gsub("os event: ", "", GSE21501.samp$event))
R> GSE21501.samp$tstage = as.numeric(gsub("t stage: ", "", GSE21501.samp$tstage))
R> GSE21501.samp$nstage = as.numeric(gsub("n stage: ", "", GSE21501.samp$nstage))
R> GSE21501.samp = GSE21501.samp[order(GSE21501.samp$acc),]
R> GSE21501.samp$event = GSE21501.samp$event == 1
R> 
R> GSE21501.gex = read.table("../data/validation/GSE21501_series_matrix.txt.xz", sep = "\t", comment.char = "!", header = TRUE)
R> GSE21501.gex = GSE21501.gex[,GSE21501.samp$acc]
R> GSE21501.gex = as.matrix(GSE21501.gex)
R> 
R> 
R> GSE21501.feat = read.table(pipe("xz -dc ../data/validation/GPL4133.annot.xz | grep -Ev '^[!#^]'"), sep = "\t", comment.char = "", quote = "", header = TRUE)
R> 
R> temp.sd = apply(GSE21501.gex, 1, sd)
R> temp.perm = order(-temp.sd)
R> GSE21501.gex = GSE21501.gex[temp.perm,]
R> GSE21501.feat = GSE21501.feat[temp.perm,]
R> temp.sel = !duplicated(GSE21501.feat$Gene.symbol) & (GSE21501.feat$Gene.symbol != "")
R> GSE21501.gex = GSE21501.gex[temp.sel,]
R> GSE21501.feat = GSE21501.feat[temp.sel,]
R> 
R> # Hard threshold at median SD
R> temp.sd = apply(GSE21501.gex, 1, sd)
R> temp.sel = temp.sd > quantile(temp.sd, 0.5)
R> GSE21501.gex = GSE21501.gex[temp.sel,]
R> GSE21501.feat = GSE21501.feat[temp.sel,]
R> 
R> # Transform to 0-1 linear
R> GSE21501.lingex = 2^GSE21501.gex
R> GSE21501.lingex = (GSE21501.lingex - apply(GSE21501.lingex, 1, min)) / (apply(GSE21501.lingex, 1, max) - apply(GSE21501.lingex, 1, min))
R> 
R> 
R> 
R> 
R> 
R> ######################################################################
R> # GSE28735
R> ######################################################################
R> 
R> GSE28735.samp = t(read.table(pipe("xz -dc ../data/validation/GSE28735_series_matrix.txt.xz | grep -E '^!Sample'"), sep = "\t"))
R> colnames(GSE28735.samp) = gsub("^!", "", GSE28735.samp[1,])
R> GSE28735.samp = data.frame(GSE28735.samp[-1,], check.names = TRUE)
R> GSE28735.samp = GSE28735.samp[,c("Sample_title", "Sample_geo_accession", "Sample_characteristics_ch1", "Sample_characteristics_ch1.1", "Sample_characteristics_ch1.2", "Sample_description")]
R> GSE28735.samp = GSE28735.samp[GSE28735.samp$Sample_characteristics_ch1 == "tissue: T",]
R> GSE28735.samp = GSE28735.samp[!grepl("na$", GSE28735.samp$Sample_characteristics_ch1.1),]
R> GSE28735.samp$Sample_title = gsub(".* ", "", GSE28735.samp$Sample_title)
R> GSE28735.samp$Sample_characteristics_ch1.1 = as.numeric(gsub("survival_month: ", "", GSE28735.samp$Sample_characteristics_ch1.1))
R> GSE28735.samp$Sample_characteristics_ch1.2 = GSE28735.samp$Sample_characteristics_ch1.2 == "cancer_death: 1"
R> colnames(GSE28735.samp) = c("Sample_title" = "id", "Sample_geo_accession" = "acc", "Sample_characteristics_ch1.1" = "time", "Sample_characteristics_ch1.2" = "event")[colnames(GSE28735.samp)]
R> GSE28735.samp = GSE28735.samp[order(GSE28735.samp$acc),]
R> 
R> GSE28735.gex = read.table("../data/validation/GSE28735_series_matrix.txt.xz", sep = "\t", comment.char = "!", header = TRUE)
R> GSE28735.gex = GSE28735.gex[,GSE28735.samp$acc]
R> GSE28735.gex = as.matrix(GSE28735.gex)
R> 
R> 
R> GSE28735.feat = read.table(pipe("xz -dc ../data/validation/GPL6244.annot.xz | grep -Ev '^[!#^]'"), sep = "\t", comment.char = "", quote = "", header = TRUE)
R> 
R> temp.sd = apply(GSE28735.gex, 1, sd)
R> temp.perm = order(-temp.sd)
R> GSE28735.gex = GSE28735.gex[temp.perm,]
R> GSE28735.feat = GSE28735.feat[temp.perm,]
R> temp.sel = !duplicated(GSE28735.feat$Gene.symbol) & (GSE28735.feat$Gene.symbol != "")
R> GSE28735.gex = GSE28735.gex[temp.sel,]
R> GSE28735.feat = GSE28735.feat[temp.sel,]
R> 
R> # Hard threshold at median SD
R> temp.sd = apply(GSE28735.gex, 1, sd)
R> temp.sel = temp.sd > quantile(temp.sd, 0.5)
R> GSE28735.gex = GSE28735.gex[temp.sel,]
R> GSE28735.feat = GSE28735.feat[temp.sel,]
R> 
R> # Transform to 0-1 linear
R> GSE28735.lingex = 2^GSE28735.gex
R> GSE28735.lingex = (GSE28735.lingex - apply(GSE28735.lingex, 1, min)) / (apply(GSE28735.lingex, 1, max) - apply(GSE28735.lingex, 1, min))
R> 
R> 
R> 
R> temp = NA
R> temp = ls()
R> rm(list = temp[grepl("^temp", temp)])
R> 
R> 
R> save.image("../data/15_validation.rda")
R> 
R> sessionInfo()
R version 3.1.1 (2014-07-10)
Platform: x86_64-unknown-linux-gnu (64-bit)

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  base     
R> 
R> 
