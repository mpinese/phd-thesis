R> 
R> load("../data/05_gexnormed_cpv_matched.rda")
R> 
R> 
R> # Subset to as homogeneous patient set as possible.  For now, concentrate
R> # on well-annotated PDACs from the Australian cohort only, who did not
R> # suffer from a sugical death.
R> sel.patient.au = cpvs$Patient.Country == "Australia"
R> sel.patient.pdac = cpvs$Path.HistoType == "Pancreatic Ductal Adenocarcinoma"
R> sel.patient.surgok = (cpvs$History.Death.Cause != "Surgical Death") | is.na(cpvs$History.Death.Cause)
R> sel.patient.diag_dsd = sel.patient.au & sel.patient.pdac & sel.patient.surgok & (!is.na(cpvs$Surv.EventTimeFromDiag.Death)) & (!is.na(cpvs$Surv.Event.DSDeath))
R> sel.patient.surg_dsd = sel.patient.au & sel.patient.pdac & sel.patient.surgok & (!is.na(cpvs$Surv.EventTimeFromSurg.Death)) & (!is.na(cpvs$Surv.Event.DSDeath))
R> sel.patient.recr_dsd = sel.patient.au & sel.patient.pdac & sel.patient.surgok & (!is.na(cpvs$Surv.EventTimeFromRec.Death)) & (!is.na(cpvs$Surv.Event.DSDeath))
R> sel.patient.diag_rec = sel.patient.au & sel.patient.pdac & sel.patient.surgok & (!is.na(cpvs$Surv.EventTimeFromDiag.Rec)) & (!is.na(cpvs$Surv.Event.Rec))
R> sel.patient.surg_rec = sel.patient.au & sel.patient.pdac & sel.patient.surgok & (!is.na(cpvs$Surv.EventTimeFromSurg.Rec)) & (!is.na(cpvs$Surv.Event.Rec))
R> sel.patient.pdac_au =  sel.patient.au & sel.patient.pdac
R> 
R> sum(sel.patient.diag_dsd)
[1] 110
R> sum(sel.patient.surg_dsd)
[1] 110
R> sum(sel.patient.recr_dsd)
[1] 81
R> sum(sel.patient.diag_rec)
[1] 104
R> sum(sel.patient.surg_rec)
[1] 104
R> sum(sel.patient.pdac_au)
[1] 115
R> 
R> 
R> # Collapse gene expression measurements to one per gene, by 
R> # selecting the probe with the highest SD for each gene.
R> x = gex[sel.probe.unsup & !is.na(features$symbol),]
R> feats = features[sel.probe.unsup & !is.na(features$symbol),]
R> temp.xperm = order(-apply(x, 1, sd))
R> x = x[temp.xperm,]
R> feats = feats[temp.xperm,]
R> x = x[!duplicated(feats$symbol),]
R> feats = feats[!duplicated(feats$symbol),]
R> stopifnot(rownames(x) == rownames(feats))
R> rownames(x) = feats$symbol
R> 
R> 
R> # Construct x and y objects for subsequent work
R> library(survival)
R> x.diag_dsd = x[, sel.patient.diag_dsd]
R> x.surg_dsd = x[, sel.patient.surg_dsd]
R> x.recr_dsd = x[, sel.patient.recr_dsd]
R> x.diag_rec = x[, sel.patient.diag_rec]
R> x.surg_rec = x[, sel.patient.surg_rec]
R> x.pdac_au = x[, sel.patient.pdac_au]
R> feats.diag_dsd = features[rownames(x.diag_dsd),]
R> feats.surg_dsd = features[rownames(x.surg_dsd),]
R> feats.recr_dsd = features[rownames(x.recr_dsd),]
R> feats.diag_rec = features[rownames(x.diag_rec),]
R> feats.surg_rec = features[rownames(x.surg_rec),]
R> feats.pdac_au = features[rownames(x.pdac_au),]
R> samps.diag_dsd = samples[colnames(x.diag_dsd),]
R> samps.surg_dsd = samples[colnames(x.surg_dsd),]
R> samps.recr_dsd = samples[colnames(x.recr_dsd),]
R> samps.diag_rec = samples[colnames(x.diag_rec),]
R> samps.surg_rec = samples[colnames(x.surg_rec),]
R> samps.pdac_au = samples[rownames(x.pdac_au),]
R> cpvs.diag_dsd = cpvs[sel.patient.diag_dsd,]
R> cpvs.surg_dsd = cpvs[sel.patient.surg_dsd,]
R> cpvs.recr_dsd = cpvs[sel.patient.recr_dsd,]
R> cpvs.diag_rec = cpvs[sel.patient.diag_rec,]
R> cpvs.surg_rec = cpvs[sel.patient.surg_rec,]
R> cpvs.pdac_au = cpvs[sel.patient.pdac_au,]
R> y.diag_dsd = Surv(cpvs.diag_dsd$Surv.EventTimeFromDiag.DSDeath, 	cpvs.diag_dsd$Surv.Event.DSDeath)
R> y.surg_dsd = Surv(cpvs.surg_dsd$Surv.EventTimeFromSurg.DSDeath, 	cpvs.surg_dsd$Surv.Event.DSDeath)
R> y.recr_dsd = Surv(cpvs.recr_dsd$Surv.EventTimeFromRec.DSDeath, 		cpvs.recr_dsd$Surv.Event.DSDeath)
R> y.diag_rec = Surv(cpvs.diag_rec$Surv.EventTimeFromDiag.Recurrence, 	cpvs.diag_rec$Surv.Event.Recurrence)
R> y.surg_rec = Surv(cpvs.surg_rec$Surv.EventTimeFromSurg.Recurrence, 	cpvs.surg_rec$Surv.Event.Recurrence)
R> y.pdac_au = Surv(cpvs.pdac_au$Surv.EventTimeFromSurg.Recurrence, 	cpvs.pdac_au$Surv.Event.Recurrence)
R> stopifnot(samps.diag_dsd$patient_id == cpvs.diag_dsd$Patient.ID)
R> stopifnot(samps.surg_dsd$patient_id == cpvs.surg_dsd$Patient.ID)
R> stopifnot(samps.recr_dsd$patient_id == cpvs.recr_dsd$Patient.ID)
R> stopifnot(samps.diag_rec$patient_id == cpvs.diag_rec$Patient.ID)
R> stopifnot(samps.surg_rec$patient_id == cpvs.surg_rec$Patient.ID)
R> stopifnot(samps.pdac_au$patient_id == cpvs.pdac_au$Patient.ID)
