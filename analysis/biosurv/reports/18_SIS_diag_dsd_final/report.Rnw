\documentclass{article}
\usepackage{geometry}
\usepackage{amsmath}
\usepackage{lscape}
\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}

\begin{document}

<<setup, include=FALSE>>=
library(knitr)
opts_chunk$set(
	fig.align = 'center', dev = 'pdf', fig.width = 6, fig.height = 6, dev.args = list(pointsize = 8), 
	tidy = TRUE, width.cutoff = 60, formatR.arrow = TRUE, cache = FALSE)
opts_knit$set(progress = TRUE, verbose = TRUE)
@

\title{SIS NMF Final: Diagnosis to DSD}
\maketitle

\section{Preparation}

<<libs-load>>=
######################################################################
# LIBRARIES
######################################################################
options(java.parameters = "-Xmx4G")

library(survival)
library(energy)
library(NMF)

library(glmulti)
library(glmnet)

library(RColorBrewer)
library(gplots)

library(xtable)
library(stargazer)

load("image.rda")
@

\section{Probe selection}
<<probe-sel>>=
table(cpss.sis$sel)
mean(cpss.sis$sel)
@


\section{Expression correlation}
<<correl-plots>>=
corPlot(x.sel.kcor, main = "Correlation Clusters of CPSS-SIS-FAST Probes\nKendall log", useRaster = FALSE)
corPlot(abs(x.sel.kcor), zlim = c(0, 1), pal = "GnBu", main = "Correlation Clusters of CPSS-SIS-FAST Probes\nAbsolute Kendall log", useRaster = FALSE)
corPlot(x.sel.dcor, zlim = c(0, 1), pal = "GnBu", main = "Correlation Clusters of CPSS-SIS-FAST Probes\ndcor log", useRaster = FALSE)
@


\section{Factorization}
<<nmf-rank-plots>>=
plot(nmf.runs.rank, nmf.runs.rank.random[[1]])
for (i in nmf.runs.rank$fit)
{ 
	consensusmap(i)
}
plot(nmf.rankrange[-1], -temp.orig_resids.delta,
	type = "o", col = "black", pch = 21, ylim = range(-c(temp.orig_resids.delta, temp.perm_resids.delta.mean)),
	xlab = "Factorization Rank Added", ylab = "Improvement in Total Residual Error")
lines(nmf.rankrange[-1], -temp.perm_resids.delta.mean, col = "red", type = "o", pch = 21, lwd = 1)
for (i in 1:ncol(temp.perm_resids))
{
	lines(nmf.rankrange[-1], -temp.perm_resids.delta[,i], type = "o", col = rgb(1, 0, 0, 0.25))
}
lines(nmf.rankrange[-1], -temp.perm_resids.delta.threshold, col = "red", lty = "dotted")
if (nmf.rank.wasauto == TRUE)
{
	temp.col = "green"
} else {
	temp.col = "blue"
}
abline(v = nmf.rank, col = temp.col, lwd = 2)
legend("topright", legend = c("Original data", "Permuted data", sprintf("Selected rank (%s)", ifelse(nmf.rank.wasauto == TRUE, "auto", "fixed"))), col = c("black", "red", temp.col),  lty = "solid", pch = 21, inset = 0.05)
@

\subsection{Fit}
<<nmf-plots>>=
consensusmap(nmf.final)
basismap(nmf.final)
coefmap(nmf.final)
@


<<coef-calc>>=
coefs.diag_dsd = t(xlin.diag_dsd.sel) %*% basis(nmf.final)
coefs.diag_rec = t(xlin.diag_rec.sel) %*% basis(nmf.final)
coefs.recr_dsd = t(xlin.recr_dsd.sel) %*% basis(nmf.final)
coefs.pdac_au = t(xlin.pdac_au.sel) %*% basis(nmf.final)
@


\subsection{MTC P-values}
<<nmf-pvals>>=
nmf.final.cpv.pvals = data.frame(
	surv.diag_rec.p = apply(coefs.diag_rec, 2, function(xc) pchisq(2*diff(coxph(y.diag_rec ~ xc)$loglik), df = 1, lower.tail = FALSE)),
	surv.diag_rec.c = apply(coefs.diag_rec, 2, function(xc) coef(coxph(y.diag_rec ~ xc))),
	surv.diag_dsd.p = apply(coefs.diag_dsd, 2, function(xc) pchisq(2*diff(coxph(y.diag_dsd ~ xc)$loglik), df = 1, lower.tail = FALSE)),
	surv.diag_dsd.c = apply(coefs.diag_dsd, 2, function(xc) coef(coxph(y.diag_dsd ~ xc))),
	surv.recr_dsd.p = apply(coefs.recr_dsd, 2, function(xc) pchisq(2*diff(coxph(y.recr_dsd ~ xc)$loglik), df = 1, lower.tail = FALSE)),
	surv.recr_dsd.c = apply(coefs.recr_dsd, 2, function(xc) coef(coxph(y.recr_dsd ~ xc))),
	pure.p = apply(coefs.pdac_au, 2, function(xc) cor.test(samps.pdac_au$purity_qpure, xc, method = "kendall")$p.value),
	pure.s = apply(coefs.pdac_au, 2, function(xc) cor.test(samps.pdac_au$purity_qpure, xc, method = "kendall")$statistic)
)
temp.pvals = as.matrix(nmf.final.cpv.pvals[,grepl("\\.p$", colnames(nmf.final.cpv.pvals))])
temp.pvals.FWER = matrix(p.adjust(as.vector(temp.pvals), "holm"), nrow = nrow(temp.pvals))
colnames(temp.pvals.FWER) = paste(colnames(temp.pvals), "Holm", sep = ".")
temp.pvals.BY = matrix(p.adjust(as.vector(temp.pvals), "BY"), nrow = nrow(temp.pvals))
colnames(temp.pvals.BY) = paste(colnames(temp.pvals), "BY", sep = ".")
nmf.final.cpv.pvals = cbind(nmf.final.cpv.pvals, temp.pvals.FWER, temp.pvals.BY)
nmf.final.cpv.pvals = nmf.final.cpv.pvals[,order(colnames(nmf.final.cpv.pvals))]
nmf.final.cpv.pvals
@


%\resizebox{\textwidth}{!}{
<<nmf-pvals-xtable, echo=FALSE, results='asis'>>=
print(xtable(nmf.final.cpv.pvals[,!grepl("\\.(BY|p)$", colnames(nmf.final.cpv.pvals))]), scalebox = 0.7)
@
%}


\subsection{MSigDB score correlation thresholding}
<<nmf-msigdb-cor-plots>>=
temp.sel_cols = apply(abs(nmf.final.msigdb.corr) >= sig.corr.threshold, 2, any)
heatmap.2(nmf.final.msigdb.corr[, temp.sel_cols], trace = "none", scale = "none", useRaster = TRUE, col = brewer.pal(11, "PiYG"), symbreaks = TRUE)
heatmap.2(nmf.final.msigdb.corr[, temp.sel_cols], trace = "none", scale = "none", useRaster = TRUE, col = brewer.pal(3, "PiYG"), breaks = c(-1, -sig.corr.threshold, sig.corr.threshold, 1))
@


<<nmf-msigdb-cor-tables-generate>>=
temp.sig_id = colnames(nmf.final.msigdb.corr)
temp.sig_class = gsub("\\..*", "", temp.sig_id)
temp.nsigs = length(temp.sig_id)
temp.nmeta = nrow(nmf.final.msigdb.corr)
tables = lapply(1:temp.nmeta, function(metagene_i) {
	tapply(1:temp.nsigs, temp.sig_class, function(sig_class_is) {
		all_cors = nmf.final.msigdb.corr[, sig_class_is]
		this_cors = all_cors[metagene_i, ]
		this_ids = temp.sig_id[sig_class_is]

		all_sig_cors = abs(all_cors) >= sig.corr.threshold
		this_sig_cors = all_sig_cors[metagene_i, ]

		sigs_to_report = which(this_sig_cors)

		if (length(sigs_to_report) == 0)
		{
			table = data.frame(GeneSet = c(), Correlation = c(), Metagenes = c())
		}
		else
		{
			table = data.frame(
				GeneSet = this_ids[sigs_to_report],
				Correlation = this_cors[sigs_to_report],
				Metagenes = apply(all_cors[,sigs_to_report,drop=FALSE], 2, function(cors) {
					sel = abs(cors) >= sig.corr.threshold
					# A positive number implies that positive GSVA signal is associated with worse prognosis
					paste(which(sel) * sign(cors[which(sel)]) * sign(nmf.final.cpv.pvals$surv.diag_dsd.c[metagene_i]), collapse = ",")
				}))
			table = table[order(-(table$Correlation)),]
			rownames(table) <- NULL
		}
		table
	}, simplify = FALSE)
})
tables
@



\subsubsection{Outcome: Diagnosis to disease-specific death}
\paragraph{All-subsets regression}
<<nmf-metagene-diagdsd-glmulti>>=
print(asreg.result)
coef(asreg.result)
summary(asreg.result@objects[[1]])
@
<<nmf-metagene-diagdsd-glmulti-plots>>=
plot(asreg.result, type = "p")
plot(asreg.result, type = "s")
plot(asreg.result, type = "w")
@

\paragraph{LASSO}
<<nmf-metagene-diagdsd-glmnet>>=
glmnet.coef.1se
glmnet.coef.min
@
<<nmf-metagene-diagdsd-glmnet-plots>>=
plot(glmnet.fit.cv)
plot(glmnet.fit.cv$glmnet.fit, label = TRUE)
abline(v = sum(abs(glmnet.coef.1se)))
abline(v = sum(abs(glmnet.coef.min)))
@


\section{Session information}
<<sessioninfo>>=
session_info
sessionInfo()
@

\end{document}


